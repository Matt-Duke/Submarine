pipeline {
    agent any
   
    stages {
        stage('Setup') {
            steps {
                script {
                    try {
                        sh 'docker rm -v pigen_work'
                    } catch (Exception e) {
                        echo e.getMessage()
                    }
                }
            }
        }
        stage('Build') {
            steps {
                script {
                    try {
                        sh 'tools/build/pi-gen/build-docker.sh -c $PWD/tools/build/config'
                    } catch (Exception e) {
                        echo e.getMessage()
                        sh 'CONTINUE=1 tools/build/pi-gen/build-docker.sh -c $PWD/tools/build/config'
                    }
                }
            }
        }
        stage('Test') {
            steps {
                echo 'Testing..'
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying....'
            }
        }
    }
}
